{"version":3,"file":"dashboard.js","mappings":"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","sources":["webpack://swipe-credit-card-recommender/./src/dashboard.ts"],"sourcesContent":["// Dashboard Script for Swipe Credit Card Recommender\n\n// Interface for transaction data\ninterface Transaction {\n  merchant: string;\n  date: string;\n  amount: number;\n  card: string;\n  cashback: number;\n}\n\n// Interface for card data\ninterface Card {\n  name: string;\n  type: string;\n  rewards: string;\n  isPrimary: boolean;\n  expiresDate?: string;\n  cashback: number;\n}\n\n// Sample data for dashboard\nconst mockTransactions: Transaction[] = [\n  {\n    merchant: 'Amazon',\n    date: 'Apr 14, 2025',\n    amount: 75.25,\n    card: 'Amazon Prime Rewards',\n    cashback: 3.76\n  },\n  {\n    merchant: 'Whole Foods',\n    date: 'Apr 12, 2025',\n    amount: 42.18,\n    card: 'Amex Gold Card',\n    cashback: 1.69\n  },\n  {\n    merchant: 'Exxon',\n    date: 'Apr 8, 2025',\n    amount: 38.50,\n    card: 'Bank of America Cash Rewards',\n    cashback: 1.16\n  },\n  {\n    merchant: 'Uber Eats',\n    date: 'Apr 5, 2025',\n    amount: 32.99,\n    card: 'Chase Sapphire Preferred',\n    cashback: 0.99\n  }\n];\n\nconst mockCards: Card[] = [\n  {\n    name: 'Wells Fargo Active Cash',\n    type: 'wells-fargo',\n    rewards: '2% on all purchases',\n    isPrimary: true,\n    cashback: 15.32\n  },\n  {\n    name: 'Chase Sapphire Preferred',\n    type: 'chase',\n    rewards: '3% on dining, 2x on travel',\n    isPrimary: false,\n    cashback: 12.45\n  },\n  {\n    name: 'Amex Gold Card',\n    type: 'amex',\n    rewards: '4x on dining, 4x on groceries',\n    isPrimary: false,\n    expiresDate: '05/2025',\n    cashback: 9.24\n  },\n  {\n    name: 'Citi Double Cash',\n    type: 'citi',\n    rewards: '1% when you buy, 1% when you pay',\n    isPrimary: false,\n    cashback: 5.17\n  }\n];\n\n// Calculate total savings\nfunction calculateTotalSavings(): number {\n  return mockTransactions.reduce((total, transaction) => total + transaction.cashback, 0);\n}\n\n// Calculate total optimized checkouts\nfunction getOptimizedCheckouts(): number {\n  return mockTransactions.length;\n}\n\n// Calculate average reward rate\nfunction getAverageRewardRate(): number {\n  const totalAmount = mockTransactions.reduce((total, transaction) => total + transaction.amount, 0);\n  const totalCashback = mockTransactions.reduce((total, transaction) => total + transaction.cashback, 0);\n  return (totalCashback / totalAmount) * 100;\n}\n\n// Initialize dashboard tabs\nfunction initTabs(): void {\n  const tabs = document.querySelectorAll('.tab');\n  tabs.forEach(tab => {\n    tab.addEventListener('click', () => {\n      tabs.forEach(t => t.classList.remove('active'));\n      tab.classList.add('active');\n      \n      // In a real implementation, this would switch between dashboard views\n      console.log(`Switched to ${tab.textContent} tab`);\n    });\n  });\n}\n\n// Initialize test button\nfunction initTestButton(): void {\n  const testButton = document.querySelector('.btn-primary');\n  if (testButton) {\n    testButton.addEventListener('click', () => {\n      window.open('test-checkout.html', '_blank');\n    });\n  }\n}\n\n// Initialize toggles in settings\nfunction initToggles(): void {\n  const toggles = document.querySelectorAll('.toggle input');\n  toggles.forEach(toggle => {\n    toggle.addEventListener('change', (event) => {\n      const target = event.target as HTMLInputElement;\n      const settingName = target.closest('.setting-item')?.querySelector('.setting-title')?.textContent;\n      console.log(`Setting \"${settingName}\" changed to: ${target.checked}`);\n      \n      // In a real implementation, this would save settings to chrome.storage\n      // chrome.storage.sync.set({ [settingName]: target.checked });\n    });\n  });\n}\n\n// Initialize dashboard when the DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Swipe Dashboard loaded');\n  \n  // Update stats\n  document.querySelector('.stats .stat-value:nth-child(1)')!.textContent = `$${calculateTotalSavings().toFixed(2)}`;\n  document.querySelector('.stats .stat-value:nth-child(3)')!.textContent = `${getOptimizedCheckouts()}`;\n  document.querySelector('.stats .stat-value:nth-child(5)')!.textContent = `${getAverageRewardRate().toFixed(1)}%`;\n  \n  // Initialize UI components\n  initTabs();\n  initTestButton();\n  initToggles();\n  \n  // Load settings from storage in a real implementation\n  // chrome.storage.sync.get(['autoDetect', 'autoFill', 'showCashback', 'sendNotifications'], function(result) {\n  //   // Update toggle states\n  // });\n}); "],"names":[],"sourceRoot":""}